# Specify analysis options.
#
# Until there are meta linter rules, each desired lint must be explicitly enabled.
# See: https://github.com/dart-lang/linter/issues/288
#
# For a list of lints, see: http://dart-lang.github.io/linter/lints/
# See the configuration guide for more
# https://github.com/dart-lang/sdk/tree/main/pkg/analyzer#configuring-the-analyzer
#
# There are other similar analysis options files in the flutter repos,
# which should be kept in sync with this file:
#
#   - analysis_options.yaml (this file)
#   - https://github.com/flutter/plugins/blob/master/analysis_options.yaml
#   - https://github.com/flutter/engine/blob/master/analysis_options.yaml
#   - https://github.com/flutter/packages/blob/master/analysis_options.yaml
#
# This file contains the analysis options used by Flutter tools, such as IntelliJ,
# Android Studio, and the `flutter analyze` command.

include: package:flutter_lints/flutter.yaml

analyzer:
  strong-mode:
    implicit-casts: true
    implicit-dynamic: true
  errors:
    # treat missing required parameters as a warning (not a hint)
    missing_required_param: ignore
    # treat missing returns as a warning (not a hint)
    missing_return: ignore
    # allow having TODOs in the code
    todo: ignore
    # allow self-reference to deprecated members (we do this because otherwise we have
    # to annotate every member in every test, assert, etc, when we deprecate something)
    deprecated_member_use_from_same_package: false
    # Ignore analyzer hints for updating pubspecs when using Future or
    # Stream and not importing dart:async
    # Please see https://github.com/flutter/flutter/pull/24528 for details.
    sdk_version_async_exported_from_core: ignore
    # Turned off until null-safe rollout is complete.
    unnecessary_null_comparison: ignore
  exclude:
    - "bin/cache/**"
    # Ignore protoc generated files
    - "dev/conductor/lib/proto/*"
    - flutter/**
    # - flutter/dev/benchmarks/complex_layout/**.dart
    # - flutter/dev/devicelab/bin/**.dart
    # - "flutter_localizations/lib/**.dart"
    # - "integration_test/test/**.dart"

linter:
  rules:
    # these rules are documented on and in the same order as
    # the Dart Lint rules page to make maintenance easier
    # https://github.com/dart-lang/linter/blob/master/example/all.yaml
    always_declare_return_types: false
    always_put_control_body_on_new_line: true
    # always_put_required_named_parameters_first # we prefer having parameters in the same order as fields https://github.com/flutter/flutter/issues/10219 : true
    always_require_non_null_named_parameters: true
    # always_specify_types : true
    # always_use_package_imports # we do this commonly : true
    annotate_overrides: true
    # avoid_annotating_with_dynamic # conflicts with always_specify_types : true
    avoid_bool_literals_in_conditional_expressions: true
    # avoid_catches_without_on_clauses # we do this commonly : true
    # avoid_catching_errors # we do this commonly : true
    avoid_classes_with_only_static_members: true
    # avoid_double_and_int_checks # only useful when targeting JS runtime : true
    avoid_dynamic_calls: false
    avoid_empty_else: true
    avoid_equals_and_hash_code_on_mutable_classes: false
    avoid_escaping_inner_quotes: false
    avoid_field_initializers_in_const_classes: true
    avoid_function_literals_in_foreach_calls: false
    # avoid_implementing_value_types # not yet tested : true
    avoid_init_to_null: true
    # avoid_js_rounded_ints # only useful when targeting JS runtime : true
    avoid_null_checks_in_equality_operators: true
    # avoid_positional_boolean_parameters # not yet tested : true
    # avoid_print # not yet tested : true
    # avoid_private_typedef_functions # we prefer having typedef (discussion in https://github.com/flutter/flutter/pull/16356) : true
    # avoid_redundant_argument_values # not yet tested : true
    avoid_relative_lib_imports: true
    avoid_renaming_method_parameters: true
    avoid_return_types_on_setters: true
    # avoid_returning_null # there are plenty of valid reasons to return null : true
    # avoid_returning_null_for_future # not yet tested : true
    avoid_returning_null_for_void: true
    # avoid_returning_this # there are plenty of valid reasons to return this : true
    # avoid_setters_without_getters # not yet tested : true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_slow_async_io: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: false
    # avoid_types_on_closure_parameters # conflicts with always_specify_types : true
    avoid_unnecessary_containers: false
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    # avoid_web_libraries_in_flutter # not yet tested : true
    await_only_futures: true
    camel_case_extensions: true
    camel_case_types: false
    cancel_subscriptions: true
    # cascade_invocations # not yet tested : true
    cast_nullable_to_non_nullable: true
    # close_sinks # not reliable enough : true
    # comment_references # blocked on https://github.com/dart-lang/linter/issues/1142 : true
    # constant_identifier_names # needs an opt-out https://github.com/dart-lang/linter/issues/204 : true
    control_flow_in_finally: true
    # curly_braces_in_flow_control_structures # not required by flutter style : true
    deprecated_consistency: true
    # diagnostic_describe_all_properties # not yet tested : true
    directives_ordering: true
    # do_not_use_environment # we do this commonly : true
    empty_catches: true
    empty_constructor_bodies: true
    empty_statements: true
    exhaustive_cases: true
    # file_names : true
    flutter_style_todos: true
    hash_and_equals: true
    implementation_imports: true
    # invariant_booleans # too many false positives: https://github.com/dart-lang/linter/issues/811 : true
    iterable_contains_unrelated_type: true
    # join_return_with_assignment # not required by flutter style : true
    leading_newlines_in_multiline_strings: false
    library_names: true
    library_prefixes: true
    library_private_types_in_public_api: true
    # lines_longer_than_80_chars # not required by flutter style : true
    list_remove_unrelated_type: true
    # literal_only_boolean_expressions # too many false positives: https://github.com/dart-lang/sdk/issues/34181 : true
    missing_whitespace_between_adjacent_strings: true
    must_be_immutable: ignore
    no_adjacent_strings_in_list: true
    # no_default_cases # too many false positives : true
    no_duplicate_case_values: true
    no_logic_in_create_state: false
    # no_runtimeType_toString # ok in tests; we enable this only in packages/ : true
    noop_primitive_operations: true
    non_constant_identifier_names: false
    null_check_on_nullable_type_parameter: false
    null_closures: true
    # omit_local_variable_types # opposite of always_specify_types : true
    # one_member_abstracts # too many false positives : true
    # only_throw_errors # https://github.com/flutter/flutter/issues/5792 : true
    overridden_fields: true
    package_api_docs: true
    package_names: true
    package_prefixed_library_names: true
    # parameter_assignments # we do this commonly : true
    prefer_adjacent_string_concatenation: true
    prefer_asserts_in_initializer_lists: false
    # prefer_asserts_with_message # not required by flutter style : true
    prefer_collection_literals: true
    prefer_conditional_assignment: false
      prefer_const_constructors
      prefer_const_constructors_in_immutables
    prefer_const_declarations: false
    prefer_const_literals_to_create_immutables: false
    # prefer_constructors_over_static_methods # far too many false positives : true
    prefer_contains: true
    # prefer_double_quotes # opposite of prefer_single_quotes : true
    prefer_equal_for_default_values: true
    # prefer_expression_function_bodies # conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#consider-using--for-short-functions-and-methods : true
    prefer_final_fields: true
    prefer_final_in_for_each: true
    prefer_final_locals: true
    prefer_for_elements_to_map_fromIterable: true
    prefer_foreach: true
    prefer_function_declarations_over_variables: true
    prefer_generic_function_type_aliases: true
    prefer_if_elements_to_conditional_expressions: false
    prefer_if_null_operators: true
    prefer_initializing_formals: false
    prefer_inlined_adds: true
    # prefer_int_literals # conflicts with https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#use-double-literals-for-double-constants : true
    prefer_interpolation_to_compose_strings: false
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_is_not_operator: true
    prefer_iterable_whereType: true
    # prefer_mixin # https://github.com/dart-lang/language/issues/32 : true
    prefer_null_aware_operators: true
    # prefer_relative_imports # incompatible with sub-package imports : true
    prefer_single_quotes: false
    prefer_spread_collections: true
    prefer_typing_uninitialized_variables: false
    prefer_void_to_null: true
    provide_deprecation_message: true
    # public_member_api_docs # enabled on a case-by-case basis; see e.g. packages/analysis_options.yaml : true
    recursive_getters: true
    sized_box_for_whitespace: false
    slash_for_doc_comments: true
    # sort_child_properties_last # not yet tested : true
    sort_constructors_first: false
    # sort_pub_dependencies # prevents separating pinned transitive dependencies : true
    sort_unnamed_constructors_first: true
    test_types_in_equals: true
    throw_in_finally: true
    tighten_type_of_initializing_formals: true
    # type_annotate_public_apis # subset of always_specify_types : true
    type_init_formals: true
    # unawaited_futures # too many false positives : true
    unnecessary_await_in_return: true
    unnecessary_brace_in_string_interps: true
    unnecessary_const: true
    # unnecessary_final # conflicts with prefer_final_locals : true
    unnecessary_getters_setters: false
    # unnecessary_lambdas # has false positives: https://github.com/dart-lang/linter/issues/498 : true
    unnecessary_new: true
    unnecessary_null_aware_assignments: true
    unnecessary_null_checks: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_nullable_for_final_variable_declarations: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    # unnecessary_raw_strings # not yet tested : true
    unnecessary_statements: false
    unnecessary_string_escapes: false
    unnecessary_string_interpolations: true
    unnecessary_this: true
    unrelated_type_equality_checks: false
    # unsafe_html # not yet tested : true
    use_full_hex_values_for_flutter_colors: false
    use_function_type_syntax_for_parameters: true
    # use_if_null_to_convert_nulls_to_bools # not yet tested : true
    use_is_even_rather_than_modulo: true
    use_key_in_widget_constructors: false
    use_late_for_private_fields_and_variables: true
    use_named_constants: false
    use_raw_strings: false
    use_rethrow_when_possible: true
    # use_setters_to_change_properties # not yet tested : true
    # use_string_buffers # has false positives: https://github.com/dart-lang/sdk/issues/34182 : true
    use_test_throws_matchers: true
    # use_to_and_as_if_applicable # has false positives, so we prefer to catch this by code-review : true
    valid_regexps: true
    void_checks: true
